'''
클래스(class), 객체(object)
객체지향프로그램(Objected Oriented Programming : OOP)
파이썬은 절차지향적이든 함수지향적이든 객체지향적이든 자유롭게 코딩할 수 있다

객체 : 이 세상에 존재하는 모든 사물(유형),사상(무형)을 통칭
기준,틀,문법 등등 형식이 필요하다 -> class
클래스는 object의 청사진
클래스를 배우는 목적은 객체를 기술하기 위함
클래스를 생성하는 것은 메모리상에 객체를 생성하기 위함이다 -> class의 인스턴스는 object이다

객체는 공통된 2가지 특징을 가짐, 사람이라는 객체를 기준으로 생각하면
    1. 속성(특징) : 눈,코,입 등등
    2. 행동(액션) : 먹는다, 걷는다, 잔다 등등

class 문법 => oop 프로그램을 작성하기 위한
    재사용성이 높아지고, oop의 특징 중 상속을 활용하면 버전업이나 기타 높은 확장성을 구사할 수 있다

class 클래스명:
    # 멤버변수 : 속성,특성 등등
    # 멤버함수 : 행동,액션 등등
    # 생성자(constructor)함수
    # 소멸자
'''
# 클래스의 첫글자는 대문자로 쓰는게 암묵적인 룰이다
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
class Person:
    # 1. 멤버 변수 : 속성(특성)
    name = None
    age = 0
    # 2. 멤버 함수 : 행동(액션)
    # 클래스의 멤버 함수의 1번 인자는 무조건 self!!
    # self : 자기자신 객체를 가르킴 => 다른 언어에서의 this와 같음 
    def eat(self):
        print('eat() call')
    
    # 3. 생성자 함수
    # 객체를 생성하는 역할을 담당
    # 메모리 상에 공간을 할당하고 이 주소를 반환함, 차후에 참조카운트와 이어짐
    def __init__(self,name): # 생성자 함수는 항상 __init__이란 이름으로
        print('constructor call')
        self.name = name # 멤버 변수 사용시 : self.변수명
        self.eat() # 클래스 안에서 멤버 함수를 부를때
        print('-'*10)
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

# 객체 생성
# 클래스명 ( 인자는 생성자의 인자 형식에 맞추면 된다 ) 
obj = Person('multi') # 밖에서 쓸때는 self를 굳이 쓸 필요 없다
print('클래스 밖에서 멤버변수 : ' + obj.name)
obj.eat()