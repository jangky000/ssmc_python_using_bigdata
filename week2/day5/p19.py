##########################################################################################
# 내장함수
# 1) 파일처리
# 파일오픈 : open()
# mode
#   r : 읽기모드
#   w : 쓰기모드
#   b : 바이너리 모드(모든 데이터가 이진으로 구성)
#   + : 반대 속성을 추가할때 ex)r+ -> rw
#   a : 추가히기 모드
#   a+ : 추가하고 읽기
#   ab : 바이너리 추가하기
# encoding
#   기술하지 않으면 2byte의 encoding을 따라간다. 시스템에 의존
#   한글 -> 1byte는 utf-8 or utf8 ( 완성형 코드, 글자가 값 매칭 ) <= 대부분 이걸로 맞춤
#       -> 2byte는 euc-kr ( 초성,중성,종성의 조합 => unicode ) 
 
f = open('a.txt','w')
# 0 ~ 9 까지 연속수 획득, for문으로 각각 획득
for n in range(10):
    ''''
    파일에 쓰기:
    0번째 라인
    1번째 라인
    ...
    9번째 라인
    '''
    f.write('%s번째 라인\n' % n)

# 반드시 파일을 다 썼으면 닫아라
# I/O를 사용하면 반드시 닫는 코드를 생략하면 안된다
f.close()

# 파일 읽기
f = open('a.txt','r',encoding='utf-8')
# f.read() : 한번에 다 읽어라
# print(f.read())
# f.readline() : 한줄씩 읽어라
while True:
    v = f.readline()
    if not v: # 비어있다면 탈출하게 하기 위해서
        break
    print(v.strip()) # 줄바꿈기호 때문에 두줄이나 띄어짐 -> 나중에는 정규표현식으로
f.close() # 이거 닫는게 귀찮아서 

##########################################################################################
# I/O를 열면 반드시 닫아야 하는데
# 까먹는 경우가 종종 발생한다
# 자동으로 닫아 줬으면 좋겠다!! -> with 를 통해서 해결가능함
# with문은 끝나면 알아서 닫아줌 닫는거 신경쓰지 않아도 됨
# 앞으로 입출력 있으면 with문을 적극 활용한다
# 데이터베이스에서 많이 활용할 것 
with open('a.txt','r',encoding='utf-8') as f:
    while True:
        v = f.readline()
        if not v:
            break
        print(v.strip())
##########################################################################################
# 파일쪽에서의 응용 : 압축 / 바이너리 데이터 처리
# 머신러닝에서 만나게 될 것 -> mnist(손글씨 데이터)
# 데이터 인코딩 처리 
##########################################################################################
# 외장함수 => 모듈 가져오기
# 2) 구조
# 형태를 유지하고 저장 ( 리스트 통째로 저장, 딕셔너리 그대로 저장 )
# pickle -> 향후 내가 만든 모델(딥러닝,머신러닝)을 저장해서 서비스나 시스템에 적용하는 방식으로 응용
# 버전을 교체할 경우 모델을 교체함으로써 바로 적용이 되는 방식
import pickle as p
data = {
    1 : [1,2,3,4],
    'name' : 'multi',
    2 : (5,6,7,8),
    3 : {'age':10}
}
# 기록(덤프)
with open('data.txt', 'wb') as f: # 텍스트가 아닌 것들은 모두 바이너리라고 생각
    p.dump(data,f,p.HIGHEST_PROTOCOL ) # 
# 로드(값을 확인)
with open('data.txt', 'rb') as f:
    print(p.load(f)[3]['age']) # age값 10을 출력하시오